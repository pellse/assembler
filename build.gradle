plugins {
    id "java-library"
    id "maven-publish"
    id "signing"
}

ext {
    reactorVersion = "3.7.2"
}

subprojects {
    apply plugin: "java"
    apply plugin: "maven-publish"
    apply plugin: "signing"

    version = "0.7.7"
    group = "io.github.pellse"

    repositories {
        mavenCentral()
    }

    java {
        withJavadocJar()
        withSourcesJar()
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    dependencies {
        implementation("io.projectreactor:reactor-core:${reactorVersion}")

        testImplementation("org.jspecify:jspecify:1.0.0")

        testImplementation("io.projectreactor:reactor-test:${reactorVersion}")
        testImplementation("io.projectreactor.tools:blockhound:1.0.8.RELEASE")

        testImplementation("org.junit.jupiter:junit-jupiter:5.8.1")
        testImplementation("org.hamcrest:hamcrest-library:1.3")
    }

    tasks.withType(JavaExec).configureEach {
        if (JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_13)) {
            jvmArgs += [
                    "-XX:+AllowRedefinitionToAddDeleteMethods"
            ]
        }
    }

    tasks.withType(Test).configureEach {
        if (JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_13)) {
            jvmArgs += [
                    "-XX:+AllowRedefinitionToAddDeleteMethods"
            ]
        }
    }

    test {
        useJUnitPlatform {
            testLogging {
                events("passed", "skipped", "failed")
            }
        }

        systemProperty 'reactor.schedulers.defaultBoundedElasticOnVirtualThreads', 'true'
        systemProperty 'reactor.schedulers.defaultBoundedElasticSize', '1000000'
        systemProperty 'reactor.schedulers.defaultBoundedElasticQueueSize', '1000000'
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java

                pom {
                    name = project.name
                    packaging = "jar"
                    description = "Small library allowing to efficiently assemble entities from querying/merging external datasources or aggregating microservices"
                    url = "https://github.com/pellse/assembler"

                    scm {
                        connection = "scm:git@github.com:pellse/assembler.git"
                        developerConnection = "scm:git@github.com:pellse/assembler.git"
                        url = "https://github.com/pellse/assembler"
                    }

                    licenses {
                        license {
                            name = "The Apache License, Version 2.0"
                            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        }
                    }

                    developers {
                        developer {
                            name = "Sebastien Pelletier"
                        }
                    }
                }
            }
        }

        repositories {
            maven {
                name = "ossrh"
                url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                credentials {
                    username = findProperty("ossrhUsername")
                    password = findProperty("ossrhPassword")
                }
            }
        }
    }

    signing {
        sign publishing.publications.mavenJava
    }
}
